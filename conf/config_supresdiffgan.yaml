mode: 'train-test'
use_perceptual_loss: false  # Disabled for speed  # Moved to root level

model:
  name: 'SupResDiffGAN'
  lr: 0.0001
  alfa_perceptual: 0.001
  alfa_adv: 0.005
  load_model: null

# wandb_logger removed - using TensorBoard for logging

trainer:
  max_epochs: 20  # Reduced for demo (~4-6 hours on RTX 4050)
  max_steps: -1
  check_val_every_n_epoch: 10  # Less frequent validation
  limit_val_batches: 0.05  # Much smaller validation set
  log_every_n_steps: 100  # Less frequent logging
  precision: 16
  accelerator: 'gpu'  # Use GPU for training
  devices: 1  # Use 1 GPU

dataset:
  name: 'celeb'
  batch_size: 8  # Increased batch size for better GPU utilization
  resize: true
  scale: 4

evaluation:
  mode: 'all'
  steps:
    - 100
    - 200
    - 500
  posteriors:
    - 'ddpm'
    - 'ddim'
  save_results: true
  results_file: 'evaluation_results/steps_evaluation.csv'

checkpoint:
  monitor: 'val/LPIPS'
  dirpath: 'models/checkpoints/'
  save_top_k: 1
  mode: 'min'
  filename: 'SupResDiffGAN-{epoch:02d}-{val_LPIPS:.3f}'

autoencoder: 'VAE'
feature_extractor: true

unet:
  - 32   # Must be divisible by GroupNorm groups (32)
  - 64
  - 96
  - 128

diffusion:
  timesteps: 50  # Even smaller for speed
  beta_type: 'cosine'
  posterior_type: 'ddpm'
  validation_timesteps: 25  # Much smaller validation timesteps
  validation_posterior_type: 'ddim'

discriminator:
  in_channels: 6
  channels:
    - 32  # Must be divisible by GroupNorm groups
    - 64
    - 128